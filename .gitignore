# Critical: Must be ignored
.env
.env.*
!.env.example
__pycache__/
.pytest_cache/
.venv/
venv/
node_modules/
.dev/
logs/
reports/
artifacts/
*.db
*.sqlite
*.sqlite3
*.log
*.out.log
*.err.log
*.pid
*.png
*.svg
*.pdf
*.exe

# Byte-compiled / optimized / DLL files
*.py[codz]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py.cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock
#poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/

# pixi
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#pixi.lock
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   in the .venv directory. It is recommended not to include this directory in version control.
.pixi

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.envrc
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Abstra
# Abstra is an AI-powered process automation framework.
# Ignore directories containing user credentials, local state, and settings.
# Learn more at https://abstra.io/docs
.abstra/

# Visual Studio Code
#  Visual Studio Code specific template is maintained in a separate VisualStudioCode.gitignore 
#  that can be found at https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore
#  and can be added to the global gitignore or merged into this file. However, if you prefer, 
#  you could uncomment the following to ignore the entire vscode folder
# .vscode/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# Cursor
#  Cursor is an AI-powered code editor. `.cursorignore` specifies files/directories to
#  exclude from AI features like autocomplete and code analysis. Recommended for sensitive data
#  refer to https://docs.cursor.com/context/ignore-files
.cursorignore
.cursorindexingignore

# Marimo
marimo/_static/
marimo/_lsp/
__marimo__/

# Database files
*.db
*.sqlite
*.sqlite3
data_hub.db
sofia.db

# API Keys and Secrets
.env.local
secrets.json
credentials.json

# Cache directories
cache/
.cache/
tmp/

# Log files  
logs/
*.log

# Node modules (for UI)
node_modules/
package-lock.json
yarn.lock

# Temporary files
*.tmp
*.bak
*.swp
*~

# OS files
.DS_Store
Thumbs.db
desktop.ini

# Sofia V2 specific
artifacts/
reports/*.csv
reports/*.html
data/*.parquet
data/*.csv
.env.paper
.env.live
.env.production

# Docker volumes
ch_data/
nats_data/
redis_data/
grafana_data/

# IDE
.idea/
.vscode/
*.code-workspace

# Testing artifacts
test_results/
coverage_reports/
.pytest_cache/
.coverage.*

# Backup files
*.backup
*.old
backup/

# Executables
*.exe
*.dll
*.so
*.dylib
tailwindcss.exe

# Environment files
.env*
!.env.example
!.env.template
!.env.tpl

# Logs
logs/
*.log

# Output directories
output/
results/
reports/
backtest_results/
optimization_results/

# Trading Data
market_data/
historical_data/
tick_data/
*.parquet

# Models
models/*.pkl
models/*.h5
models/*.joblib
checkpoints/

# Project specific
sofia_ui/static/mock/
D:BORSA2sofia-v2*
NUL

# ==========================================
# SECURITY HARDENING - v0.2.0
# ==========================================

# Private keys and certificates
*.pem
*.key
*.crt
*.cer
*.p12
*.pfx
id_rsa*
id_dsa*
id_ed25519*
*.ppk

# AWS
.aws/
aws_access_key*
aws_secret*

# Google Cloud
gcloud/
*.json
service-account-*.json
client_secret*.json

# Azure
.azure/
*.publishsettings

# SSH
.ssh/
known_hosts
authorized_keys

# GPG
*.gpg
*.asc
secring.*

# Config with potential secrets
config.ini
config.yml
config.yaml
settings.json
settings.yml
*.conf
!*.conf.example
!*.conf.template

# Wallet files
wallet.dat
*.wallet
*.keystore

# Browser data
cookies.txt
*.cookie
session_storage/
local_storage/

# Jupyter secrets
.jupyter/jupyter_notebook_config.json

# Terraform
*.tfstate
*.tfstate.*
.terraform/
terraform.tfvars

# Kubernetes
kubeconfig
*.kubeconfig

# Docker
docker-compose.override.yml
.dockerignore

# Binary and compiled
*.bin
*.class
*.jar
*.war
*.ear
*.nar
*.pyc
*.pyo
*.pyd
*.whl

# Archives
*.zip
*.tar
*.tar.gz
*.tgz
*.rar
*.7z
*.bz2
*.xz

# Large data files
*.csv
!requirements*.csv
*.tsv
*.json
!package*.json
!tsconfig*.json
*.xml
*.h5
*.hdf5
*.npy
*.npz
*.pkl
*.pickle
*.msgpack
*.feather
*.arrow

# Media files
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.mkv
*.webm
*.mp3
*.wav
*.flac
*.aac
*.ogg
*.jpg
*.jpeg
*.png
*.gif
*.bmp
*.tiff
*.ico
*.webp

# Office documents
*.doc
*.docx
*.xls
*.xlsx
*.ppt
*.pptx
*.odt
*.ods
*.odp

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# JetBrains
.idea/
*.iml
*.iws
*.ipr
out/
.idea_modules/

# VS Code
.vscode/
*.code-workspace
.history/

# Sublime Text
*.sublime-project
*.sublime-workspace
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

# Vim
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]
Session.vim
Sessionx.vim
.netrwhist
tags
[._]*.un~

# Emacs
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*
.org-id-locations
*_archive
*_flymake.*
/eshell/history
/eshell/lastdir
/elpa/
*.rel
/auto/
.cask/
dist/
flycheck_*.el
/server/
.projectile
.dir-locals.el
/network-security.data

# Project tracking
.tracker/
.metrics/
.monitoring/

# Sensitive paths
/config/live/
/config/production/
/secrets/
/credentials/
/private/
/sensitive/

# Temporary and test data
test_output/
test_results/
test_data/
*.test
*.spec.ts
*.spec.js
cypress/videos/
cypress/screenshots/
playwright-report/
test-results/

# Build artifacts
build/
dist/
out/
target/
*.egg-info/
wheels/
pip-wheel-metadata/

# Dependencies
vendor/
bower_components/
jspm_packages/
web_modules/

# Runtime
pid/
pids/
*.seed
*.pid.lock

# Coverage
coverage/
*.lcov
.nyc_output/

# Debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Package manager
.npm/
.yarn/
.pnpm-store/
.yarn-integrity

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# Serverless
.serverless/
.serverless_nextjs/

# FuseBox cache
.fusebox/

# DynamoDB Local
.dynamodb/

# TernJS
.tern-port

# Stores VSCode versions
.vscode-test/

# Yarn
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz

# Incidents and snapshots
incidents/
snapshots/
crash_dumps/

# Live trading
live_config/
live_logs/
live_data/
production_config/
production_logs/

# Never track these
NEVER_COMMIT*
DO_NOT_COMMIT*
SECRET*
PRIVATE*
CONFIDENTIAL*

# SQL dumps
*.sql
*.dump
*.bak.sql

# Redis
dump.rdb
appendonly.aof

# MongoDB
*.bson
mongod.lock

# PostgreSQL
postmaster.pid

# MySQL
mysql-bin.*
mysql-relay-bin.*

# SQLite
*.db-shm
*.db-wal

# Blockchain
geth/
.ethereum/
.ethash/

# ML/AI
wandb/
mlruns/
.neptune/
tensorboard/
.guild/

# Data science
.RData
.Rhistory
.Rproj.user/
*.Rproj

# Rust
target/
Cargo.lock

# Go
*.exe
*.exe~
*.dll
*.so
*.dylib
*.test
*.out
vendor/
go.work

# Ruby
*.gem
*.rbc
/.config
/coverage/
/InstalledFiles
/pkg/
/spec/reports/
/spec/examples.txt
/test/tmp/
/test/version_tmp/
/tmp/

# PHP
/vendor/
composer.phar
composer.lock

# Java
*.class
*.log
*.ctxt
.mtj.tmp/
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar
hs_err_pid*

# C/C++
*.o
*.obj
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex
*.dSYM/
*.su
*.idb
*.pdb

# .NET
bin/
obj/
*.user
*.userosscache
*.sln.docstates
*.userprefs
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user
.JustCode
_TeamCity*
*.dotCover
.axoCover/*
!.axoCover/settings.json
*.coverage
*.coveragexml
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*
*.mm.*
AutoTest.Net/
.sass-cache/
[Ee]xpress/
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html
publish/
*.[Pp]ublish.xml
*.azurePubxml
*.pubxml
*.publishproj
PublishScripts/
*.nupkg
*.snupkg
**/[Pp]ackages/*
!**/[Pp]ackages/build/
*.nuget.props
*.nuget.targets
csx/
*.build.csdef
ecf/
rcf/
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload
*.[Cc]ache
!?*.[Cc]ache/
ClientBin/
~$*
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs
Generated_Code/
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak
*.mdf
*.ldf
*.ndf
