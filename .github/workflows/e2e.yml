name: E2E Tests

on:
  pull_request:
    branches: [ main ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install fastapi uvicorn requests pydantic python-dotenv
      - name: Run E2E smoke test
        run: |
          python - <<'EOF'
import uvicorn
import threading
import time
import requests
import sys
from pathlib import Path

# Add src to path
sys.path.insert(0, str(Path.cwd()))

# Import and start app
from src.api.main import app

def run_server():
    uvicorn.run(app, host="127.0.0.1", port=8001, log_level="warning")

# Start server in background
t = threading.Thread(target=run_server, daemon=True)
t.start()

# Wait for server to start
time.sleep(2)

try:
    # Test health endpoint
    r = requests.get("http://127.0.0.1:8001/health", timeout=3)
    assert r.status_code == 200, f"Health check failed: {r.status_code}"
    
    # Test symbols endpoint
    r = requests.get("http://127.0.0.1:8001/symbols", timeout=3)
    assert r.status_code == 200, f"Symbols endpoint failed: {r.status_code}"
    assert "symbols" in r.json(), "Symbols response missing 'symbols' key"
    
    # Test metrics endpoint
    r = requests.get("http://127.0.0.1:8001/metrics", timeout=3)
    assert r.status_code == 200, f"Metrics endpoint failed: {r.status_code}"
    
    print("✅ E2E tests passed!")
    
except Exception as e:
    print(f"❌ E2E test failed: {e}")
    sys.exit(1)
EOF