name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Ensure minimal requirements.txt
      run: |
        if [ ! -f requirements.txt ]; then
          echo -e "pytest\npytest-cov\nruff\nblack\nmypy\nbandit\npip-audit" > requirements.txt
        fi
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov ruff black mypy types-requests
    
    - name: Run tests with pytest
      run: |
        pytest -q --cov=. --cov-report=xml --cov-report=term
    
    - name: Check code formatting with Black
      run: |
        black --check .
    
    - name: Lint with Ruff
      run: |
        ruff check .
    
    - name: Type check with mypy
      run: |
        mypy . --ignore-missing-imports
    
    - name: Check test coverage
      run: |
        coverage report --fail-under=80
    
    - name: Upload coverage to Codecov
      if: ${{ false }}
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
        verbose: true

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit pip-audit
      - name: Bandit (security lints)
        run: bandit -r . -ll -x tests
      - name: pip-audit (dependency vulns)
        run: |
          if [ -f requirements.txt ]; then
            pip-audit -r requirements.txt
          else
            echo "No requirements.txt, skipping pip-audit"
          fi
