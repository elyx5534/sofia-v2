name: CI

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10','3.11','3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      # requirements yoksa oluştur
      - name: Ensure minimal requirements.txt
        run: |
          if [ ! -f requirements.txt ]; then
            echo -e "pytest\npytest-cov\nblack\nruff\nmypy\ncoverage\n" > requirements.txt
          fi
      
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # tests klasörü yoksa dummy test ekle
      - name: Ensure smoke test exists
        run: |
          mkdir -p tests
          if [ ! -f tests/test_smoke.py ]; then
            echo 'def test_smoke(): assert 1+1==2' > tests/test_smoke.py
          fi
      
      - name: Pytest
        run: pytest -q --cov=. --cov-report=xml --cov-report=term
      
      # İlk aşamada lint/type hataları build'i düşürmesin
      - name: Black (check, non-blocking)
        run: black --check . || true
      
      - name: Ruff (lint, non-blocking)
        run: ruff check . || true
      
      - name: Mypy (type check, non-blocking)
        run: mypy . --ignore-missing-imports || true
      
      # Coverage eşiğini şimdilik zorlamayalım (dosyalar yokken)
      - name: Coverage report (non-blocking)
        run: coverage xml || true

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit pip-audit
      
      - name: Bandit
        run: bandit -r . -ll -x tests || true
      
      - name: pip-audit
        run: |
          if [ -f requirements.txt ]; then
            pip-audit -r requirements.txt || true
          else
            echo "No requirements.txt, skipping pip-audit"
          fi
