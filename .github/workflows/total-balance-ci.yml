name: Total Balance CI/CD

on:
  push:
    branches: [ main, fix/*, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    name: Unit Tests - Portfolio Calculations
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Run portfolio calculation tests
        run: |
          python -m pytest tests/test_portfolio_calculations.py -v --cov=src.api.portfolio_endpoints --cov-report=xml --cov-report=html
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
      
      - name: Coverage summary
        run: |
          python -m pytest tests/test_portfolio_calculations.py --cov=src.api.portfolio_endpoints --cov-report=term

  e2e-tests:
    name: E2E Tests - Total Balance Display
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install playwright pytest-playwright
          playwright install chromium --with-deps
      
      - name: Start API server
        run: |
          python -m uvicorn src.api.main:app --host 127.0.0.1 --port 8021 &
          echo "API_PID=$!" >> $GITHUB_ENV
          sleep 5
      
      - name: Start UI server
        run: |
          python sofia_ui/simple_server.py &
          echo "UI_PID=$!" >> $GITHUB_ENV
          sleep 3
      
      - name: Run E2E tests
        run: |
          python -m pytest tests/e2e/test_total_balance_e2e.py -v --html=reports/e2e-report.html --self-contained-html
        continue-on-error: true
      
      - name: Upload E2E report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-report
          path: reports/
      
      - name: Cleanup servers
        if: always()
        run: |
          kill $API_PID || true
          kill $UI_PID || true

  api-integration:
    name: API Integration Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install httpx pytest-httpx
      
      - name: Start API server
        run: |
          python -m uvicorn src.api.main:app --host 127.0.0.1 --port 8021 &
          sleep 5
      
      - name: Test portfolio endpoints
        run: |
          # Test portfolio summary
          curl -f http://127.0.0.1:8021/portfolio/summary -o portfolio_summary.json
          cat portfolio_summary.json | python -m json.tool
          
          # Test balance endpoint
          curl -f http://127.0.0.1:8021/portfolio/balance -o balance.json
          cat balance.json | python -m json.tool
          
          # Test positions endpoint
          curl -f http://127.0.0.1:8021/portfolio/positions -o positions.json
          cat positions.json | python -m json.tool
      
      - name: Validate Total Balance calculation
        run: |
          python -c "
          import json
          with open('portfolio_summary.json') as f:
              data = json.load(f)
          
          # Validate Total Balance exists and is correct format
          assert 'total_balance' in data
          assert float(data['total_balance']) > 0
          print(f'Total Balance: ${data[\"total_balance\"]}')
          
          # Validate it matches expected calculation
          # For our test data: $130,174.50
          expected = 130174.50
          actual = float(data['total_balance'])
          assert abs(actual - expected) < 1.0, f'Expected ~{expected}, got {actual}'
          print('✅ Total Balance calculation verified!')
          "
      
      - name: Upload API responses
        uses: actions/upload-artifact@v4
        with:
          name: api-responses
          path: |
            portfolio_summary.json
            balance.json
            positions.json

  lighthouse:
    name: Performance Testing
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm install -g lighthouse
      
      - name: Start servers
        run: |
          python -m uvicorn src.api.main:app --host 127.0.0.1 --port 8021 &
          python sofia_ui/simple_server.py &
          sleep 5
      
      - name: Run Lighthouse
        run: |
          lighthouse http://127.0.0.1:8004 \
            --output=json,html \
            --output-path=./lighthouse-report \
            --chrome-flags="--headless --no-sandbox" \
            --preset=desktop \
            --only-categories=performance,best-practices
      
      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: |
            lighthouse-report.json
            lighthouse-report.html
      
      - name: Performance assertions
        run: |
          python -c "
          import json
          with open('lighthouse-report.json') as f:
              data = json.load(f)
          
          perf_score = data['categories']['performance']['score'] * 100
          print(f'Performance Score: {perf_score}%')
          
          # Assert minimum performance score
          assert perf_score >= 70, f'Performance score {perf_score}% is below threshold'
          print('✅ Performance test passed!')
          "

  build-summary:
    name: Build Summary Report
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests, api-integration, lighthouse]
    if: always()
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
      
      - name: Generate summary report
        run: |
          echo "# Sofia V2 - Total Balance CI/CD Report" > SUMMARY.md
          echo "" >> SUMMARY.md
          echo "## Build Information" >> SUMMARY.md
          echo "- **Date:** $(date)" >> SUMMARY.md
          echo "- **Branch:** ${{ github.ref }}" >> SUMMARY.md
          echo "- **Commit:** ${{ github.sha }}" >> SUMMARY.md
          echo "" >> SUMMARY.md
          
          echo "## Test Results" >> SUMMARY.md
          echo "" >> SUMMARY.md
          
          echo "### Unit Tests" >> SUMMARY.md
          if [ "${{ needs.unit-tests.result }}" == "success" ]; then
            echo "✅ **PASSED** - All portfolio calculations verified" >> SUMMARY.md
          else
            echo "❌ **FAILED** - Check portfolio calculation tests" >> SUMMARY.md
          fi
          echo "" >> SUMMARY.md
          
          echo "### E2E Tests" >> SUMMARY.md
          if [ "${{ needs.e2e-tests.result }}" == "success" ]; then
            echo "✅ **PASSED** - Total Balance displays correctly" >> SUMMARY.md
          else
            echo "⚠️ **WARNING** - E2E tests need attention" >> SUMMARY.md
          fi
          echo "" >> SUMMARY.md
          
          echo "### API Integration" >> SUMMARY.md
          if [ "${{ needs.api-integration.result }}" == "success" ]; then
            echo "✅ **PASSED** - Portfolio endpoints working" >> SUMMARY.md
          else
            echo "❌ **FAILED** - API integration issues" >> SUMMARY.md
          fi
          echo "" >> SUMMARY.md
          
          echo "### Performance" >> SUMMARY.md
          if [ "${{ needs.lighthouse.result }}" == "success" ]; then
            echo "✅ **PASSED** - Performance metrics met" >> SUMMARY.md
          else
            echo "⚠️ **WARNING** - Performance below threshold" >> SUMMARY.md
          fi
          echo "" >> SUMMARY.md
          
          echo "## Artifacts Generated" >> SUMMARY.md
          echo "- Coverage Report" >> SUMMARY.md
          echo "- E2E Test Report" >> SUMMARY.md
          echo "- API Response Samples" >> SUMMARY.md
          echo "- Lighthouse Performance Report" >> SUMMARY.md
          echo "" >> SUMMARY.md
          
          echo "## Total Balance Formula" >> SUMMARY.md
          echo '```' >> SUMMARY.md
          echo "TB = cash_balance + Σ(position.qty * position.mark_price) - fees_accrued" >> SUMMARY.md
          echo '```' >> SUMMARY.md
          
          cat SUMMARY.md
      
      - name: Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: build-summary
          path: SUMMARY.md
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('SUMMARY.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });